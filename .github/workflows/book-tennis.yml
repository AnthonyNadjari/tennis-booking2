name: Book Tennis Court

on:
  workflow_dispatch:
    inputs:
      date:
        description: 'Date de réservation (YYYY-MM-DD)'
        required: true
        default: ''
      hour:
        description: 'Heure de réservation (7-21)'
        required: true
        default: '19'  # Set default hour to 19
        type: choice
        options: ['7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21']
      minutes:
        description: 'Minutes de réservation (0 ou 30)'
        required: true
        default: '0'
        type: choice
        options: ['0', '30']
      account:
        description: 'Compte à utiliser'
        required: true
        default: '1'
        type: choice
        options: ['1', '2']
      court:
        description: 'Court à réserver'
        required: true
        default: 'Court1'
        type: choice
        options: ['Court1', 'Court2', 'Court3', 'Court4']

jobs:
  book-court:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set default date to today + 7 if empty
        id: set-date
        run: |
          if [ -z "${{ github.event.inputs.date }}" ]; then
            DATE=$(date -d "+7 days" "+%Y-%m-%d")
          else
            DATE="${{ github.event.inputs.date }}"
          fi
          echo "BOOKING_DATE=$DATE" >> "$GITHUB_ENV"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Run booking script
        env:
          TENNIS_USERNAME: ${{ secrets.TENNIS_USERNAME }}
          TENNIS_USERNAME2: ${{ secrets.TENNIS_USERNAME2 }}
          TENNIS_PASSWORD: ${{ secrets.TENNIS_PASSWORD }}
          CARD_NUMBER: ${{ secrets.CARD_NUMBER }}
          CARD_EXPIRY: ${{ secrets.CARD_EXPIRY }}
          CARD_CVC: ${{ secrets.CARD_CVC }}
          BOOKING_DATE: ${{ env.BOOKING_DATE }}
          BOOKING_HOUR: ${{ github.event.inputs.hour }}
          BOOKING_MINUTES: ${{ github.event.inputs.minutes }}
          ACCOUNT: ${{ github.event.inputs.account }}
          BOOKING_COURT: ${{ github.event.inputs.court }}
        run: |
          python main.py

      - name: Upload booking log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: booking-log
          path: booking.log
          if-no-files-found: ignore

      - name: Upload screenshots as artifacts
        if: always()  # Upload even if the script fails
        uses: actions/upload-artifact@v4
        with:
          name: booking-screenshots
          path: screenshot_*.png
